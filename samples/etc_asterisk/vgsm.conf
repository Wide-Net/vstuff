;
; vGSM-I and vGSM-II configuration file for Asterisk's chan_vgsm channel driver
;
; The [general] section is reserved for parameters which are driver-wide
;
; sms_spooler = /usr/sbin/sendmail
;	This parameter specifies the pathname of the script which will handle
;	SMS and CBM messages. A description of the spooler input is available
;	at http://open.voismart.it/index.php/VGSM_Spooler
;
; sms_spooler_pars =
;	The parameters indicated in this directive get passed on the spooler's
;	command line
;
; *********************** Modules ************************
;
; Section names prefixed by me: are used to configure each GSM module.
; The name will be used in Dial() application parameters to select the outbound
; module.
;
; A special module name '*' serves to specify default values applied to all
; MEs. The default values may be overridden in the ME-specific section.
;
; Here follow the configuration directives available in me: sections:
; 
; sms_sender_domain = localhost
;	Since /usr/sbin/sendmail may be used as a SMS spooler, you may want
;	to attach a valid domain to the sender's number in the From: header.
;	This parameter specifies such domain.
;
; sms_recipient_address = root@localhost
;	To use a SMTP spooler the To: header is also required. This parameter
;	allows you to specify it.
;
; device =
;	The character device controlling the main serial of the GSM module.
;	For vGSM-I the main serial is named /dev/vgsmX (with X=0,1,2...)
;	For vGSM-II the main serial is named /dev/vgsm/<cardname>_meX
;	(with X=module number, 0, 1, 2 or 3).
;
; mesim_device =
;	The character device controlling the GSM module's SIM controller.
;	The main serial is named /dev/vgsm/<cardname>_mesimX
;	(with X=module number, 0, 1, 2 or 3).
;
; sim_driver = local
;	The driver controlling the ME-SIM interface.
;
;	local		The SIM is connected to a local SIM holder
;	implementa	The SIM is provided by Implementa's SIM client
;
; sim_device_filename =
;	The character device corresponding to the SIM holder
;	(valid with 'local' driver)
;
; sim_client_addr =
;	Address and port (address:port) of Implementa's SIM client
;	(valid with 'implementa' driver)
;
; context = vgsm
;	Inbound calls will be initiated in the specified context.
;
; operator_selection = auto
;	Instructs the GSM module to perform the specified operator selection.
;	Valid values are:
;	auto:
;		Automatically select operator's network
;	manual:
;		Forces selection of the operator specified in operator_id
;		parameter.
;	manual_fallback:
;		Forces selection of the operator specified in operator_id;
;		If such operator cannot be found or registration fails, the
;		GSM module falls back to automatic mode.
;
;	deregistered:
;		The module remains de-registered
;
; operator_id =
;	Specifies the operator ID to use in manual and manual_fallback modes
;	as LAI (Location Area Identifier) numeric format. The LAI is comprised
;	of the concatenation of MCC+MNC (Mobile Country Code + Mobile Network
;	Code). For example, the Vodafone Italy's LAI is 22210.
;
; pin =
;	If the SIM requests a PIN to be accessed and this field is not empty,
;	a single attempt to authenticate is made using the specified number.
;	If not more than one attempt remains before the PUK is required, the
;	PIN is not automatically sent.
;
; === The following parameters should not normally be modified ===
;
; poweroff_on_exit =
;	If you do not wish to turn off GSM modules when terminating Asterisk
;	set this parameter to 'off'. It is mostly useful for debugging
;	purposes.
;
; set_clock = yes
;	Set the internal GSM module's clock to the current time. This is
;	recommended as the module's RTC is not powered.
;
; dtmf_quelch =
;
; dtmf_mutemax =
;
; dtmf_relax =
;
; amr_enabled = true
;	Allow presentation of AMR bearer capability. Setting this parameter
;	to false will prevent the AMR codec to be used.
;
; gsm_hr_enabled = true
;	Allow presentation of half-rate GSM CODEC in the bearer capability.
;	Setting this parameter to false will prevent the HR codec to be used.
;
; gsm_preferred = fr
;	Set the preferred GSM CODEC. Valid values are 'fr' (full-rate), 'hr'
;	(half-rate)
;
; tx_calibrate = 21402		[0..32767]
;	Calibrate TX audio level with the formula:
;	Gain in dB = 20 * log (tx_calibrate / 32767)
;	Due to internal processing, the 0dB value actually corresponds to
;	value 21402
;
; rx_calibrate = 16383		[0..32767]
;	Calibrate RX audio level with the formula:
;	Gain in dB = 20 * log (2 * rx_calibrate / 32767)
;
; jitbuf_average = 5
;	Tunes the lowlevel jitter buffer exponential average constant
;
; jitbuf_low = 10
;	Tunes the lowlevel jitter buffer low-watermark
;
; jitbuf_hardlow = 0
;	Tunes the lowlevel jitter buffer hard low-watermark
;
; jitbuf_high = 30
;	Tunes the lowlevel jitter buffer high-watermark
;
; jitbuf_hardhigh = 1024
;	Tunes the lowlevel jitter buffer hard high-watermark
;
; suppress_proceeding = false
;	Prevents chan_vgsm to report proceeding to asterisk to work around a
;	bug that would lead to double SIP "100 Trying" that in turn confuses
;	some SIP proxy.
;
; rx_gain = 255
;	Codec gain for the analog receive path
;	[vGSM-I only.]
;
; tx_gain = 255
;	Codec gain for the analog transmit path
;	[vGSM-I only.]
;
; ********************* Huntgroups ***********************
;
; Section names prefixed by 'hungroup:' describe a huntgroup.
; Huntgroups are used to have the channel driver search for an available
; ME to place calls on. The first available ME will be picked. The searching
; will stop if the network reports a problem at the destingation.
;
; The hunting method is specified by:
;
; mode = sequential
;               (sequential | rotary)
;       Type of hunting to perform in the hungroup
;
; members = ""
;       List the members (interface names) belonging to the huntgroup.
;       The order is preserved in the hunting process.
;
 
[general]
sms_spooler = /usr/lib/asterisk/sms_spooler
sms_spooler_pars = -it

[huntgroup:vodafone]
mode = sequential
members = vodafone, vodafone2

[me:*]
sms_sender_domain = sms.voismart.it
sms_recipient_address = SMS Router <sms@voismart.it>
dtmf_quelch = false
dtmf_mutemax = false
dtmf_relax = false
operator_selection = auto
operator_id =

[me:me0]
device = /dev/vgsm2_me0
mesim_device = /dev/vgsm2_mesim0
context = vgsm_in
sim_driver = local
sim_device_filename = /dev/vgsm2_sim0
mohinterpret = default
language = it
;sim_driver = implementa
;sim_client_addr = 127.0.0.1:6000

[me:me1]
device = /dev/vgsm2_me1
mesim_device = /dev/vgsm2_mesim1
context = vgsm_in
sim_proto = local
sim_device_filename = /dev/vgsm2_sim1
mohinterpret = default
language = it

[me:me2]
device = /dev/vgsm2_me2
mesim_device = /dev/vgsm2_mesim2
context = vgsm_in
sim_proto = local
sim_device_filename = /dev/vgsm2_sim2
mohinterpret = default
language = it

[me:me3]
device = /dev/vgsm2_me3
mesim_device = /dev/vgsm2_mesim3
context = vgsm_in
sim_proto = local
sim_device_filename = /dev/vgsm2_sim3
mohinterpret = default
language = it 
